@page "/fetchdata"
@using Entity.Blazor.Models
@using Entity.Blazor.Services
@using Entity.Console.Models
@using Entity.Console.Repositories
@inject WeatherForecastService ForecastService
@inject UserRepository UserRepository

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (users.Count > 0)
{
    <h2>Users</h2>

    <ul>
        @foreach (var user in users) {
            <li>Username: @user.Username</li>
        }
    </ul>
}
else
{
    <p>You have no users.</p>
}

@code {
    private WeatherForecast[]? forecasts;
    private IList<User> users;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
        users = UserRepository.GetAll();
    }
}
